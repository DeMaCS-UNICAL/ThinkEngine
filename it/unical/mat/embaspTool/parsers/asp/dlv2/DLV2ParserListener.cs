//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/francesco/Scrivania/EmbASP-antlr-grammars/dlv2/DLV2Parser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DLV2Parser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IDLV2ParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.answer_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnswer_set([NotNull] DLV2Parser.Answer_setContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.answer_set"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnswer_set([NotNull] DLV2Parser.Answer_setContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.cost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCost([NotNull] DLV2Parser.CostContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.cost"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCost([NotNull] DLV2Parser.CostContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLevel([NotNull] DLV2Parser.LevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.level"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLevel([NotNull] DLV2Parser.LevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModel([NotNull] DLV2Parser.ModelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.model"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModel([NotNull] DLV2Parser.ModelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutput([NotNull] DLV2Parser.OutputContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutput([NotNull] DLV2Parser.OutputContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.predicate_atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate_atom([NotNull] DLV2Parser.Predicate_atomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.predicate_atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate_atom([NotNull] DLV2Parser.Predicate_atomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DLV2Parser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] DLV2Parser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DLV2Parser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] DLV2Parser.TermContext context);
}
